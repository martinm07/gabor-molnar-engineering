"""empty message

Revision ID: d9ce01558adb
Revises: 108727581de0
Create Date: 2024-06-05 12:27:53.254338

"""

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = "d9ce01558adb"
down_revision = "108727581de0"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "usercontacts",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "userloginoptions",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("info", sa.String(length=100), nullable=False),
        sa.Column("type", sa.String(length=10), nullable=False),
        sa.Column("precedence", sa.Integer(), nullable=False),
        sa.Column("isrecovery", sa.Boolean(), nullable=False),
        sa.Column("isloginfactor", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("users", schema=None) as batch_op:
        batch_op.add_column(sa.Column("name", sa.String(length=32), nullable=False))
        batch_op.add_column(sa.Column("title", sa.String(length=96), nullable=False))
        batch_op.add_column(sa.Column("about", sa.String(length=512), nullable=False))
        batch_op.add_column(sa.Column("date_created", sa.Date(), nullable=False))
        batch_op.add_column(
            sa.Column("display_date_created", sa.Boolean(), nullable=False)
        )
        batch_op.drop_constraint("users_ibfk_1", type_="foreignkey")
        batch_op.drop_index("uq_users_email")
        batch_op.drop_index("uq_users_name")
        batch_op.drop_index("uq_users_secret_id")
        batch_op.drop_column("phone_number")
        batch_op.drop_column("is_verified")
        batch_op.drop_column("is_2fa")
        batch_op.drop_column("secret_id")
        batch_op.drop_column("email")
        batch_op.drop_column("password_hash")
        batch_op.drop_column("avatar_image")
        batch_op.drop_column("username")

    with op.batch_alter_table("comments", schema=None) as batch_op:
        batch_op.drop_constraint("comments_ibfk_2", type_="foreignkey")
    with op.batch_alter_table("document_tag", schema=None) as batch_op:
        batch_op.drop_constraint("fk_documenttag_documentid", type_="foreignkey")

    op.drop_table("newsletteremails")
    op.drop_table("documents")
    op.drop_table("comments")
    op.drop_table("document_tag")
    op.drop_table("userrecoveries")
    op.drop_table("requeststamps")
    op.drop_table("tags")

    with op.batch_alter_table("usersecrets", schema=None) as batch_op:
        batch_op.add_column(sa.Column("user_id", sa.Integer(), nullable=True))
        batch_op.create_foreign_key(
            "fk_usersecrets_userid", "users", ["user_id"], ["id"]
        )
        batch_op.drop_column("secret")

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("usersecrets", schema=None) as batch_op:
        batch_op.add_column(
            sa.Column("secret", mysql.VARCHAR(length=200), nullable=True)
        )
        batch_op.drop_constraint("fk_usersecrets_userid", type_="foreignkey")
        batch_op.drop_column("user_id")

    with op.batch_alter_table("users", schema=None) as batch_op:
        batch_op.add_column(
            sa.Column("username", mysql.VARCHAR(length=50), nullable=False)
        )
        batch_op.add_column(
            sa.Column("avatar_image", mysql.VARCHAR(length=256), nullable=True)
        )
        batch_op.add_column(
            sa.Column("password_hash", mysql.VARCHAR(length=256), nullable=True)
        )
        batch_op.add_column(
            sa.Column("email", mysql.VARCHAR(length=100), nullable=True)
        )
        batch_op.add_column(
            sa.Column("secret_id", mysql.INTEGER(), autoincrement=False, nullable=False)
        )
        batch_op.add_column(
            sa.Column(
                "is_2fa",
                mysql.TINYINT(display_width=1),
                autoincrement=False,
                nullable=True,
            )
        )
        batch_op.add_column(
            sa.Column(
                "is_verified",
                mysql.TINYINT(display_width=1),
                autoincrement=False,
                nullable=True,
            )
        )
        batch_op.add_column(
            sa.Column("phone_number", mysql.VARCHAR(length=64), nullable=True)
        )
        batch_op.create_foreign_key(
            "users_ibfk_1", "usersecrets", ["secret_id"], ["id"]
        )
        batch_op.create_index("uq_users_secret_id", ["secret_id"], unique=True)
        batch_op.create_index("uq_users_name", ["username"], unique=True)
        batch_op.create_index("uq_users_email", ["email"], unique=True)
        batch_op.drop_column("display_date_created")
        batch_op.drop_column("date_created")
        batch_op.drop_column("about")
        batch_op.drop_column("title")
        batch_op.drop_column("name")

    op.create_table(
        "tags",
        sa.Column("id", mysql.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("name", mysql.VARCHAR(length=32), nullable=True),
        sa.Column("color", mysql.VARCHAR(length=16), nullable=True),
        sa.Column("description", mysql.VARCHAR(length=1024), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        mysql_collate="utf8mb4_0900_ai_ci",
        mysql_default_charset="utf8mb4",
        mysql_engine="InnoDB",
    )
    op.create_table(
        "requeststamps",
        sa.Column("id", mysql.INTEGER(), autoincrement=True, nullable=False),
        sa.Column(
            "timestamp",
            mysql.DATETIME(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=True,
        ),
        sa.Column("ipaddress", mysql.VARCHAR(length=15), nullable=True),
        sa.Column("address_pool", mysql.VARCHAR(length=33), nullable=True),
        sa.Column(
            "address_lifespan", mysql.INTEGER(), autoincrement=False, nullable=True
        ),
        sa.Column("cookie_id", mysql.VARCHAR(length=256), nullable=True),
        sa.Column("request", mysql.VARCHAR(length=32), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        mysql_collate="utf8mb4_0900_ai_ci",
        mysql_default_charset="utf8mb4",
        mysql_engine="InnoDB",
    )
    op.create_table(
        "userrecoveries",
        sa.Column("id", mysql.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("user_id", mysql.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("method", mysql.VARCHAR(length=16), nullable=True),
        sa.Column("data", mysql.VARCHAR(length=128), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"], ["users.id"], name="fk_userrecoveries_users_id"
        ),
        sa.PrimaryKeyConstraint("id"),
        mysql_collate="utf8mb4_0900_ai_ci",
        mysql_default_charset="utf8mb4",
        mysql_engine="InnoDB",
    )
    op.create_table(
        "document_tag",
        sa.Column("document_id", mysql.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("tag_id", mysql.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["document_id"], ["documents.id"], name="fk_documenttag_documentid"
        ),
        sa.ForeignKeyConstraint(["tag_id"], ["tags.id"], name="fk_documenttag_tagid"),
        sa.PrimaryKeyConstraint("document_id", "tag_id"),
        mysql_collate="utf8mb4_0900_ai_ci",
        mysql_default_charset="utf8mb4",
        mysql_engine="InnoDB",
    )
    op.create_table(
        "comments",
        sa.Column("id", mysql.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("time_created", mysql.DATETIME(), nullable=True),
        sa.Column(
            "is_edited",
            mysql.TINYINT(display_width=1),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("content", mysql.TEXT(), nullable=True),
        sa.Column("user_id", mysql.INTEGER(), autoincrement=False, nullable=True),
        sa.Column(
            "parent_comment_id", mysql.INTEGER(), autoincrement=False, nullable=True
        ),
        sa.Column(
            "parent_document_id", mysql.INTEGER(), autoincrement=False, nullable=True
        ),
        sa.ForeignKeyConstraint(
            ["parent_comment_id"], ["comments.id"], name="comments_ibfk_1"
        ),
        sa.ForeignKeyConstraint(
            ["parent_document_id"], ["documents.id"], name="comments_ibfk_2"
        ),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], name="comments_ibfk_3"),
        sa.PrimaryKeyConstraint("id"),
        mysql_collate="utf8mb4_0900_ai_ci",
        mysql_default_charset="utf8mb4",
        mysql_engine="InnoDB",
    )
    op.create_table(
        "documents",
        sa.Column("id", mysql.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("time_created", mysql.DATETIME(), nullable=True),
        sa.Column("content", mysql.TEXT(), nullable=True),
        sa.Column("title", mysql.VARCHAR(length=128), nullable=True),
        sa.Column("thumbnail", mysql.VARCHAR(length=256), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        mysql_collate="utf8mb4_0900_ai_ci",
        mysql_default_charset="utf8mb4",
        mysql_engine="InnoDB",
    )
    op.create_table(
        "newsletteremails",
        sa.Column("id", mysql.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("email", mysql.VARCHAR(length=200), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        mysql_collate="utf8mb4_0900_ai_ci",
        mysql_default_charset="utf8mb4",
        mysql_engine="InnoDB",
    )
    op.drop_table("userloginoptions")
    op.drop_table("usercontacts")
    # ### end Alembic commands ###
